name: CI
on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Release
        run: |
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
          php composer-setup.php
          php -r "unlink('composer-setup.php');"
          php composer.phar clear-cache
          php composer.phar config --global github-oauth.github.com $GITHUB_TOKEN
          php composer.phar upgrade
          php composer.phar install
          rm -rf deploy_data
          mkdir deploy_data
          cp -R public/* deploy_data/
          cp -R vendor deploy_data/concrete/
          rm -rf deploy_data/packages/*
          mv deploy_data/concrete/vendor/bitterdev/* deploy_data/packages
          cd deploy_data/packages
          for f in *; do
              if [ -d "$f" ]; then
                  cd $f
                  php ../../../composer.phar install
                  cd ..
              fi
          done
          cd ..
          cd ..
          cat << EOF > deploy_data/application/bootstrap/autoload.php
          <?php

          defined('C5_EXECUTE') or die('Access Denied.');

          /*
           * ----------------------------------------------------------------------------
           * Load all composer autoload items.
           * ----------------------------------------------------------------------------
           */

          // If the checker class is already provided, likely we have been included in a separate composer project
          if (!class_exists(\DoctrineXml\Checker::class)) {
              // Otherwise, lets try to load composer ourselves
              if (!@include(DIR_BASE_CORE . '/' . DIRNAME_VENDOR . '/autoload.php')) {
                  echo 'Third party libraries not installed. Make sure that composer has required libraries in the concrete/ directory.';
                  die(1);
              }
          }
          EOF
          rm -rf deploy_data/application/files/*
          rm deploy_data/application/config/database.php
          rm -rf deploy_data/application/config/generated_overrides/*
          find deploy_data -name ".DS_Store" -delete
          find deploy_data -name ".gitignore" -delete
          find deploy_data -name ".git" -delete
          find deploy_data -name ".htaccess" -delete
          cd deploy_data
          cd concrete
          rm -rf vendor
          php ../../composer.phar install
          cd ..
          zip -r build.zip ./*
          mv build.zip ..
          cd ..
          rm -rf deploy_data
          rm composer.phar
